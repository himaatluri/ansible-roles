---
- name: Determine the OS type
  ansible.builtin.setup:

- name: Install required packages for Ubuntu
  ansible.builtin.package:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present
  when: ansible_facts['os_family'] == 'Debian'

- name: Install required packages for CentOS
  ansible.builtin.package:
    name: yum-utils
    state: present
  when: ansible_facts['os_family'] == 'RedHat'

- name: Add Docker GPG key for Ubuntu
  ansible.builtin.command: >
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg |
    apt-key add -
  args:
    creates: /etc/apt/trusted.gpg.d/docker.gpg
  when: ansible_facts['os_family'] == 'Debian'

- name: Add Docker GPG key for CentOS
  ansible.builtin.command: >
    curl -fsSL https://download.docker.com/linux/centos/gpg |
    rpm --import -
  args:
    creates: /etc/pki/rpm-gpg/RPM-GPG-KEY-docker
  when: ansible_facts['os_family'] == 'RedHat'

- name: Add Docker repository for Ubuntu
  ansible.builtin.command: >
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  args:
    creates: /etc/apt/sources.list.d/docker.list
  when: ansible_facts['os_family'] == 'Debian'

- name: Add Docker repository for CentOS
  ansible.builtin.command: >
    yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  args:
    creates: /etc/yum.repos.d/docker-ce.repo
  when: ansible_facts['os_family'] == 'RedHat'

- name: Update package index for Ubuntu
  ansible.builtin.command: >
    apt-get update
  when: ansible_facts['os_family'] == 'Debian'

- name: Update package index for CentOS
  ansible.builtin.command: >
    yum makecache fast
  when: ansible_facts['os_family'] == 'RedHat'

- name: Install Containerd
  ansible.builtin.package:
    name: containerd.io
    state: present

- name: Install Runc
  ansible.builtin.command: >
    curl -L https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64 -o /usr/local/sbin/runc
  args:
    creates: /usr/local/sbin/runc
  notify: Set runc permissions

- name: Set Runc permissions
  ansible.builtin.command: chmod +x /usr/local/sbin/runc
  notify: Ensure Runc is executable
  when: ansible_facts['os_family'] in ['Debian', 'RedHat']

- name: Install Nerdctl
  ansible.builtin.command: >
    curl -L https://github.com/containerd/nerdctl/releases/download/v0.13.0/nerdctl-0.13.0-linux-amd64.tar.gz -o /usr/local/bin/nerdctl.tar.gz
  args:
    creates: /usr/local/bin/nerdctl.tar.gz
  notify: Extract Nerdctl

- name: Extract Nerdctl
  ansible.builtin.unarchive:
    src: /usr/local/bin/nerdctl.tar.gz
    dest: /usr/local/bin/
    remote_src: yes

- name: Ensure Nerdctl is executable
  ansible.builtin.command: chmod +x /usr/local/bin/nerdctl
  when: ansible_facts['os_family'] in ['Debian', 'RedHat']
...