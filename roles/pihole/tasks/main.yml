---
- name: Pull Image
  community.docker.docker_image:
    name: "{{ image }}"
    source: pull

- name: Ensure Pi-hole base directory exists
  ansible.builtin.file:
    path: "{{ pihole_base }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Ensure etc-pihole and etc-dnsmasq.d subdirectories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - "{{ pihole_base }}/etc-pihole"
    - "{{ pihole_base }}/etc-dnsmasq.d"

- name: Start Pi-hole Docker container
  community.docker.docker_container:
    name: pihole
    image: "{{ pihole_image }}"
    state: started
    restart_policy: unless-stopped
    hostname: "{{ pihole_hostname }}"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "4444:80"
    env:
      TZ: "{{ timezone }}"
      VIRTUAL_HOST: "{{ pihole_hostname }}"
      PROXY_LOCATION: "{{ pihole_hostname }}"
      FTLCONF_LOCAL_IPV4: "{{ local_ipv4 }}"
    volumes:
      - "{{ pihole_base }}/etc-pihole:/etc/pihole"
      - "{{ pihole_base }}/etc-dnsmasq.d:/etc/dnsmasq.d"
    dns_servers:
      - "127.0.0.1"
      - "1.1.1.1"

- name: Backup existing resolv.conf
  ansible.builtin.command:
    cmd: mv /etc/resolv.conf /etc/resolv.conf.backup
    creates: /etc/resolv.conf.backup

- name: Update resolv.conf to use Pi-hole DNS
  ansible.builtin.copy:
    dest: /etc/resolv.conf
    content: |
      nameserver {{ host_ip }}
      nameserver {{ upstream_dns }}
    owner: root
    group: root
    mode: '0644'

# Restart systemd-resolved to apply DNS changes
- name: Restart systemd-resolved
  ansible.builtin.systemd:
    name: systemd-resolved
    state: restarted
    daemon_reload: yes
...